{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/3.0",
        "parameters": [
          {
            "id": "162fbe40-d785-4e3f-a70c-bc4411c9572b",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRangeParm",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 4924800000,
              "endTime": "2021-06-27T06:53:00.000Z"
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": true
            },
            "label": "Time Range"
          },
          {
            "id": "67aa49d8-cdf8-4510-b06a-d7cbe6f2a724",
            "version": "KqlParameterItem/1.0",
            "name": "SubscriptionParam",
            "label": "Select Subscription",
            "type": 6,
            "isRequired": true,
            "value": "/subscriptions/97e85eba-485a-4100-aca9-eb480f45dea0",
            "typeSettings": {
              "additionalResourceOptions": [],
              "includeAll": false
            }
          },
          {
            "id": "a7e3efb5-3af7-4dac-b243-48564c14d904",
            "version": "KqlParameterItem/1.0",
            "name": "Cluster",
            "type": 2,
            "query": "resources\r\n| where type == 'microsoft.azurestackhci/clusters'\r\n| extend reportedProperties = properties.reportedProperties\r\n| extend clusterName = reportedProperties.clusterName\r\n| extend  tostring(clusterName)\r\n| project clusterName\r\n\r\n\r\n",
            "value": "AzStackCluster",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e9126970-4359-473c-b537-9b2b17200ce8",
            "version": "KqlParameterItem/1.0",
            "name": "Clusternodes",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == 'microsoft.azurestackhci/clusters'\r\n| where (name == '{Cluster}')\r\n| extend reportedProperties = properties.reportedProperties\r\n| mv-expand nodes = reportedProperties.nodes\r\n| project node_name = nodes.name\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isNotEqualTo",
        "value": "Event"
      },
      "name": "parameters - 3"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c00ade37-c427-4e01-ae03-6593df1015d5",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Hosts Overview",
            "subTarget": "OSOverview",
            "preText": "Data Type Distribution",
            "style": "link"
          },
          {
            "id": "363e10a0-8ba3-4a29-bbae-242a6b416a69",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Storage Overview",
            "subTarget": "Diskstatus",
            "style": "link"
          },
          {
            "id": "97fc4a81-e136-41ae-8ded-0ed1637269b6",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Cluster CSV",
            "subTarget": "Csv",
            "style": "link"
          },
          {
            "id": "5569f37e-aaf1-49d2-bf3d-41db8df32b64",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Metrics",
            "subTarget": "Metric",
            "style": "link"
          },
          {
            "id": "97b9e1f1-bcb2-4aaf-a925-26f9f8a176a5",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Update",
            "subTarget": "Update",
            "style": "link"
          },
          {
            "id": "a84421ee-7fc1-4ffe-bdd1-3aa4deb48816",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Services Status",
            "subTarget": "SVC",
            "style": "link"
          },
          {
            "id": "31f45e46-f251-441f-9cdc-e86a0ac8110c",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Event log Analysis",
            "subTarget": "Event",
            "style": "link"
          },
          {
            "id": "21926a69-e659-414b-9de6-b48e2c05c5ba",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "healthservice",
            "subTarget": "healthservice",
            "style": "link"
          }
        ]
      },
      "name": "links - 4"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "93cdc518-8617-45d9-a38b-b220e1cbb0da",
            "version": "KqlParameterItem/1.0",
            "name": "ContextSelection",
            "type": 1,
            "query": "where strcat(\"'\", id, \"'\") =~ \"{DefaultWorkspace:value}\"\r\n| project value = tostring(pack('sub', subscriptionId, 'rg', resourceGroup, 'ws', id))",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "9aa3a264-0dfc-420c-a2be-d125fc08081d",
            "version": "KqlParameterItem/1.0",
            "name": "HybridMode",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (ContextSelection is empty ), result = 'false'",
                "criteriaContext": {
                  "leftOperand": "ContextSelection",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              },
              {
                "condition": "else result = 'true'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "7587a535-df28-4c15-b3c4-38979e09e278",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "/subscriptions/97e85eba-485a-4100-aca9-eb480f45dea0/resourcegroups/hci-rg/providers/Microsoft.OperationalInsights/workspaces/hci-la",
              "/subscriptions/97e85eba-485a-4100-aca9-eb480f45dea0/resourceGroups/hci-rg/providers/Microsoft.OperationalInsights/workspaces/hci-la"
            ],
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "limitSelectTo": 5,
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c4ea4147-c106-4a0e-b417-e775e222a97e",
            "version": "KqlParameterItem/1.0",
            "name": "TimeGrain",
            "type": 2,
            "isRequired": true,
            "value": "1h",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"1 minute\",\r\n        \"value\": \"1m\"\r\n    },\r\n    {\r\n        \"label\": \"5 minutes\",\r\n        \"value\": \"5m\"\r\n    },\r\n    {\r\n        \"label\": \"15 minutes\",\r\n        \"value\": \"15m\"\r\n    },\r\n    {\r\n        \"label\": \"30 minutes\",\r\n        \"value\": \"30m\"\r\n    },\r\n    {\r\n        \"label\": \"1 hour\",\r\n        \"value\": \"1h\"\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "f2aa4912-1786-4d8a-a211-28f16157cdfb",
            "version": "KqlParameterItem/1.0",
            "name": "LineChartQuerySnippet",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"bin(TimeGenerated, {TimeGrain}), ResourceName | render linechart\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "bbfcc2ae-4479-45ea-b11e-4b9e370ad4f3",
            "version": "KqlParameterItem/1.0",
            "name": "GridQuerySnippet",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"bin(TimeGenerated, {TimeGrain}), ResourceName | render linechart\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "23b426ed-6b30-467b-8c2c-060d7b19e741",
            "version": "KqlParameterItem/1.0",
            "name": "ComputerNameContains",
            "type": 1,
            "timeContext": {
              "durationMs": 86400000
            },
            "value": ""
          },
          {
            "id": "3f92ad2a-d12e-494b-b013-89b503865e13",
            "version": "KqlParameterItem/1.0",
            "name": "CustomComputerQuery",
            "type": 1,
            "query": "let computerFilter = iff('{ComputerNameContains}' != '', \"| where Computer contains '{ComputerNameContains}'\", \"\");\r\nprint(computerFilter)",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "29c54861-8640-47a1-b751-6fd2aee808b0",
            "version": "KqlParameterItem/1.0",
            "name": "Computers",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Perf\r\n| where TimeGenerated {TimeRangeParm}\r\n{CustomComputerQuery}\r\n| summarize by Computer\r\n| project Value = Computer, Display = Computer, isSelected = false\r\n| order by Display asc\r\n| union (datatable(Value:string, Display:string, isSelected:boolean)['*', 'All',true])",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "e566110f-c104-48d6-8ee9-39a107796503",
            "version": "KqlParameterItem/1.0",
            "name": "ComputerFilter",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Computers contains '*'), result = CustomComputerQuery",
                "criteriaContext": {
                  "leftOperand": "Computers",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "*",
                  "resultValType": "param",
                  "resultVal": "CustomComputerQuery"
                }
              },
              {
                "condition": "else result = '| where Computer in ({Computers})'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where Computer in ({Computers})"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "00249b01-0a6a-4acb-8c00-3116d6d4d0af",
            "version": "KqlParameterItem/1.0",
            "name": "TopN",
            "type": 1,
            "isRequired": true,
            "value": "5",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "d919d08f-5537-4aa7-b1c0-c542167b2966",
            "version": "KqlParameterItem/1.0",
            "name": "Mode",
            "type": 2,
            "isRequired": true,
            "value": "1",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"Locked\",\r\n        \"value\": \"1\"\r\n    },\r\n    {\r\n        \"label\": \"Unlocked\",\r\n        \"value\": \"0\"\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "name": "parameters - 17"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "8087b89a-26c5-423a-a666-37306ab61cda",
            "version": "KqlParameterItem/1.0",
            "name": "Counter",
            "type": 2,
            "isRequired": true,
            "query": "Perf\r\n| where TimeGenerated {TimeRangeParm}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "e3475d62-d2df-4ae8-8088-09c90295a41c",
            "version": "KqlParameterItem/1.0",
            "name": "Counter1",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "else result = Counter",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "Counter"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "0e71e0e6-c675-4611-a52f-6d5bde6e8083",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregator1",
            "type": 2,
            "isRequired": true,
            "value": "Average = round(avg(CounterValue), 2)",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\", \"selected\":false},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\", \"selected\":false},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\", \"selected\":false},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\", \"selected\":false},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\", \"selected\":false},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\", \"selected\":false},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\", \"selected\":true}    \r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "fd27c298-5b6e-4cdb-be33-594a86a80cce",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorValue1",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator1}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "c0bd1853-0bbd-4211-8d66-91c3ab4d0d7e",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorOrder1",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TrendAggregator1 contains 'P5th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator1",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P5th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "if (TrendAggregator1 contains 'P10th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator1",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P10th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "else result = 'desc'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "desc"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "b5f3e306-5053-4529-8008-226703f759ab",
            "version": "KqlParameterItem/1.0",
            "name": "Visualization1",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"value\": \"0\",\r\n        \"label\": \"Line Chart\",\r\n        \"selected\": true\r\n    },\r\n    {\r\n        \"value\": \"1\",\r\n        \"label\": \"Grid\",\r\n        \"selected\": false\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "d33292f8-eb04-4caf-a15e-a97096c47b58",
            "version": "KqlParameterItem/1.0",
            "name": "Snippet1",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Visualization1 == '0'), result = LineChartQuerySnippet",
                "criteriaContext": {
                  "leftOperand": "Visualization1",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0",
                  "resultValType": "param",
                  "resultVal": "LineChartQuerySnippet"
                }
              },
              {
                "condition": "else result = GridQuerySnippet",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "GridQuerySnippet"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "4d17bcc7-2986-4b16-ab64-ca2fb19a222e",
            "version": "KqlParameterItem/1.0",
            "name": "Unit1",
            "type": 2,
            "value": " ",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"B -> MB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"B -> GB\",\r\n        \"value\": \"/1024/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> GB\",\r\n        \"value\": \"/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> TB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Mb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Gb\",\r\n        \"value\": \"/1000/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Gb\",\r\n        \"value\": \"/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Tb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"s -> ms\",\r\n        \"value\": \"*1000\"\r\n    },\r\n    {\r\n        \"label\": \"ms -> s\",\r\n        \"value\": \"/1001\"\r\n    },\r\n\r\n    {\r\n        \"label\": \"None\",\r\n        \"value\": \" \"\r\n     }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a6122509-7bac-4474-ac70-1c36460e9315",
            "version": "KqlParameterItem/1.0",
            "name": "CounterLabel1",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{Counter:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "f732fea6-6c72-4dda-8bea-50770f623778",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorLabel1",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator1:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "above",
        "queryType": 8
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Mode",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Metric"
        }
      ],
      "customWidth": "25",
      "name": "parameters - 18"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e3475d62-d2df-4ae8-8088-09c90295a41c",
            "version": "KqlParameterItem/1.0",
            "name": "Counter2",
            "type": 2,
            "isRequired": true,
            "query": "Perf\r\n| where TimeGenerated {TimeRangeParm}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "0e71e0e6-c675-4611-a52f-6d5bde6e8083",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregator2",
            "type": 2,
            "isRequired": true,
            "value": "Average = round(avg(CounterValue), 2)",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\", \"selected\":false},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\", \"selected\":false},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\", \"selected\":false},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\", \"selected\":false},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\", \"selected\":false},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\", \"selected\":false},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\", \"selected\":true}    \r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "fd27c298-5b6e-4cdb-be33-594a86a80cce",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorValue2",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator2}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "c0bd1853-0bbd-4211-8d66-91c3ab4d0d7e",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorOrder2",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TrendAggregator2 contains 'P5th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator2",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P5th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "if (TrendAggregator2 contains 'P10th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator2",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P10th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "else result = 'desc'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "desc"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "b5f3e306-5053-4529-8008-226703f759ab",
            "version": "KqlParameterItem/1.0",
            "name": "Visualization2",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"value\": \"0\",\r\n        \"label\": \"Line Chart\",\r\n        \"selected\": true\r\n    },\r\n    {\r\n        \"value\": \"1\",\r\n        \"label\": \"Grid\",\r\n        \"selected\": false\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "1"
          },
          {
            "id": "d33292f8-eb04-4caf-a15e-a97096c47b58",
            "version": "KqlParameterItem/1.0",
            "name": "Snippet2",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Visualization2 == '0'), result = LineChartQuerySnippet",
                "criteriaContext": {
                  "leftOperand": "Visualization2",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0",
                  "resultValType": "param",
                  "resultVal": "LineChartQuerySnippet"
                }
              },
              {
                "condition": "else result = GridQuerySnippet",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "GridQuerySnippet"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "4d17bcc7-2986-4b16-ab64-ca2fb19a222e",
            "version": "KqlParameterItem/1.0",
            "name": "Unit2",
            "type": 2,
            "value": " ",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"B -> MB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"B -> GB\",\r\n        \"value\": \"/1024/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> GB\",\r\n        \"value\": \"/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> TB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Mb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Gb\",\r\n        \"value\": \"/1000/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Gb\",\r\n        \"value\": \"/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Tb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"s -> ms\",\r\n        \"value\": \"*1000\"\r\n    },\r\n    {\r\n        \"label\": \"ms -> s\",\r\n        \"value\": \"/1001\"\r\n    },\r\n\r\n    {\r\n        \"label\": \"None\",\r\n        \"value\": \" \"\r\n     }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a6122509-7bac-4474-ac70-1c36460e9315",
            "version": "KqlParameterItem/1.0",
            "name": "CounterLabel2",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{Counter2:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "f732fea6-6c72-4dda-8bea-50770f623778",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorLabel2",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator2:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "above",
        "queryType": 8
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Mode",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Metric"
        }
      ],
      "customWidth": "25",
      "name": "parameters - 18 - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e3475d62-d2df-4ae8-8088-09c90295a41c",
            "version": "KqlParameterItem/1.0",
            "name": "Counter3",
            "type": 2,
            "isRequired": true,
            "query": "Perf\r\n| where TimeGenerated {TimeRangeParm}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "0e71e0e6-c675-4611-a52f-6d5bde6e8083",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregator3",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\", \"selected\":false},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\", \"selected\":false},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\", \"selected\":false},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\", \"selected\":false},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\", \"selected\":false},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\", \"selected\":false},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\", \"selected\":true}    \r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "Average = round(avg(CounterValue), 2)"
          },
          {
            "id": "fd27c298-5b6e-4cdb-be33-594a86a80cce",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorValue3",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator3}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "c0bd1853-0bbd-4211-8d66-91c3ab4d0d7e",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorOrder3",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TrendAggregator3 contains 'P5th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator3",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P5th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "if (TrendAggregator3 contains 'P10th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator3",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P10th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "else result = 'desc'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "desc"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "b5f3e306-5053-4529-8008-226703f759ab",
            "version": "KqlParameterItem/1.0",
            "name": "Visualization3",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"value\": \"0\",\r\n        \"label\": \"Line Chart\",\r\n        \"selected\": true\r\n    },\r\n    {\r\n        \"value\": \"1\",\r\n        \"label\": \"Grid\",\r\n        \"selected\": false\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "d33292f8-eb04-4caf-a15e-a97096c47b58",
            "version": "KqlParameterItem/1.0",
            "name": "Snippet3",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Visualization3 == '0'), result = LineChartQuerySnippet",
                "criteriaContext": {
                  "leftOperand": "Visualization3",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0",
                  "resultValType": "param",
                  "resultVal": "LineChartQuerySnippet"
                }
              },
              {
                "condition": "else result = GridQuerySnippet",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "GridQuerySnippet"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "4d17bcc7-2986-4b16-ab64-ca2fb19a222e",
            "version": "KqlParameterItem/1.0",
            "name": "Unit3",
            "type": 2,
            "value": " ",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"B -> MB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"B -> GB\",\r\n        \"value\": \"/1024/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> GB\",\r\n        \"value\": \"/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> TB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Mb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Gb\",\r\n        \"value\": \"/1000/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Gb\",\r\n        \"value\": \"/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Tb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"s -> ms\",\r\n        \"value\": \"*1000\"\r\n    },\r\n    {\r\n        \"label\": \"ms -> s\",\r\n        \"value\": \"/1001\"\r\n    },\r\n\r\n    {\r\n        \"label\": \"None\",\r\n        \"value\": \" \"\r\n     }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a6122509-7bac-4474-ac70-1c36460e9315",
            "version": "KqlParameterItem/1.0",
            "name": "CounterLabel3",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{Counter3:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "f732fea6-6c72-4dda-8bea-50770f623778",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorLabel3",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator3:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "above",
        "queryType": 8
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Mode",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Metric"
        }
      ],
      "customWidth": "25",
      "name": "parameters - 18 - Copy - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e3475d62-d2df-4ae8-8088-09c90295a41c",
            "version": "KqlParameterItem/1.0",
            "name": "Counter4",
            "type": 2,
            "isRequired": true,
            "query": "Perf\r\n| where TimeGenerated {TimeRangeParm}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          },
          {
            "id": "0e71e0e6-c675-4611-a52f-6d5bde6e8083",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregator4",
            "type": 2,
            "isRequired": true,
            "value": "Average = round(avg(CounterValue), 2)",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\", \"selected\":false},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\", \"selected\":false},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\", \"selected\":false},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\", \"selected\":false},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\", \"selected\":false},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\", \"selected\":false},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\", \"selected\":true}    \r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "fd27c298-5b6e-4cdb-be33-594a86a80cce",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorValue4",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator4}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "c0bd1853-0bbd-4211-8d66-91c3ab4d0d7e",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorOrder4",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (TrendAggregator4 contains 'P5th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator4",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P5th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "if (TrendAggregator4 contains 'P10th'), result = 'asc'",
                "criteriaContext": {
                  "leftOperand": "TrendAggregator4",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "P10th",
                  "resultValType": "static",
                  "resultVal": "asc"
                }
              },
              {
                "condition": "else result = 'desc'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "desc"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "b5f3e306-5053-4529-8008-226703f759ab",
            "version": "KqlParameterItem/1.0",
            "name": "Visualization4",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"value\": \"0\",\r\n        \"label\": \"Line Chart\",\r\n        \"selected\": true\r\n    },\r\n    {\r\n        \"value\": \"1\",\r\n        \"label\": \"Grid\",\r\n        \"selected\": false\r\n    }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "d33292f8-eb04-4caf-a15e-a97096c47b58",
            "version": "KqlParameterItem/1.0",
            "name": "Snippet4",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (Visualization4 == '0'), result = LineChartQuerySnippet",
                "criteriaContext": {
                  "leftOperand": "Visualization4",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "0",
                  "resultValType": "param",
                  "resultVal": "LineChartQuerySnippet"
                }
              },
              {
                "condition": "else result = GridQuerySnippet",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "GridQuerySnippet"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "4d17bcc7-2986-4b16-ab64-ca2fb19a222e",
            "version": "KqlParameterItem/1.0",
            "name": "Unit4",
            "type": 2,
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"B -> MB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"B -> GB\",\r\n        \"value\": \"/1024/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> GB\",\r\n        \"value\": \"/1024\"\r\n    },\r\n    {\r\n        \"label\": \"MB -> TB\",\r\n        \"value\": \"/1024/1024\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Mb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"b -> Gb\",\r\n        \"value\": \"/1000/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Gb\",\r\n        \"value\": \"/1000\"\r\n    },\r\n    {\r\n        \"label\": \"Mb -> Tb\",\r\n        \"value\": \"/1000/1000\"\r\n    },\r\n    {\r\n        \"label\": \"s -> ms\",\r\n        \"value\": \"*1000\"\r\n    },\r\n    {\r\n        \"label\": \"ms -> s\",\r\n        \"value\": \"/1001\"\r\n    },\r\n\r\n    {\r\n        \"label\": \"None\",\r\n        \"value\": \" \"\r\n     }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a6122509-7bac-4474-ac70-1c36460e9315",
            "version": "KqlParameterItem/1.0",
            "name": "CounterLabel4",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{Counter4:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          },
          {
            "id": "f732fea6-6c72-4dda-8bea-50770f623778",
            "version": "KqlParameterItem/1.0",
            "name": "TrendAggregatorLabel4",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{TrendAggregator4:label}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "above",
        "queryType": 8
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Mode",
          "comparison": "isEqualTo",
          "value": "0"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Metric"
        }
      ],
      "customWidth": "25",
      "name": "parameters - 18 - Copy - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3 style=\"margin-bottom:0; color:#C9BA0C;\">{CounterLabel1}</h3><h4 style=\"margin-top:0;font-weight:normal;color:#777;\">{TrendAggregatorLabel1} {TrendAggregatorOrder1} {Unit1:label}</h4>"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "text - 19"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3 style=\"margin-bottom:0; color:#C9BA0C;\">{CounterLabel2}</h3><h4 style=\"margin-top:0;font-weight:normal;color:#777;\">{TrendAggregatorLabel2} {TrendAggregatorOrder2} {Unit2:label}</h4>"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "text - 19 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3 style=\"margin-bottom:0; color:#C9BA0C;\">{CounterLabel3}</h3><h4 style=\"margin-top:0;font-weight:normal;color:#777;\">{TrendAggregatorLabel3} {TrendAggregatorOrder3} {Unit3:label}</h4>"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "text - 19 - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3 style=\"margin-bottom:0; color:#C9BA0C;\">{CounterLabel4}</h3><h4 style=\"margin-top:0;font-weight:normal;color:#777;\">{TrendAggregatorLabel4} {TrendAggregatorOrder4} {Unit4:label}</h4>"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "text - 19 - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let metric = dynamic({Counter1});\r\nlet cpuSummary=totable(Perf\r\n    {ComputerFilter}\r\n    | where TimeGenerated {TimeRangeParm} \r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | summarize hint.shufflekey=Computer {TrendAggregator1} by Computer, CounterName\r\n    | top {TopN} by {TrendAggregator1:label} {TrendAggregatorOrder1});\r\nlet computerList=(cpuSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 1\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = ServiceMapComputer_CL\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend Computer = ComputerName_s, AzureCloudServiceNodeIdentity = iif(isnotempty(columnifexists('AzureCloudServiceName_s', '')), strcat(columnifexists('AzureCloudServiceInstanceId_s', ''), '|',                     columnifexists('AzureCloudServiceDeployment_g', '')), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(columnifexists('AzureVmScaleSetName_s', '')),              strcat(columnifexists('AzureVmScaleSetInstanceId_s', ''), '|',                     columnifexists('AzureVmScaleSetDeployment_g', '')), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', ComputerName_s,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId_g,                   'resourceGroup', AzureResourceGroup_s,                   'azureResourceId', columnifexists('AzureResourceId_s', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', columnifexists('AzureCloudServiceInstanceId_s', ''),                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName_s', ''),                   'cloudServiceDeploymentId', columnifexists('AzureCloudServiceDeployment_g', ''),                   'cloudServiceName', columnifexists('AzureCloudServiceName_s', ''),                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('AzureName_s', ''),                   'vmScaleSetDeploymentId', columnifexists('AzureVmScaleSetDeployment_g', ''),                   'vmScaleSetName', columnifexists('AzureVmScaleSetName_s', ''),                   'serviceFabricClusterName', columnifexists('AzureServiceFabricClusterName_s', ''),                   'vmScaleSetResourceId', columnifexists('AzureVmScaleSetResourceId_s', ''),                   'resourceGroupName', columnifexists('AzureResourceGroup_s', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId_g', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {TrendAggregator1}{Unit1} by {Snippet1}",
        "size": 0,
        "showAnnotations": true,
        "noDataMessage": "No computers are emitting data for this performance counter.",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "query - 19"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let metric = dynamic({Counter2});\r\nlet cpuSummary=totable(Perf\r\n    {ComputerFilter}\r\n    | where TimeGenerated {TimeRangeParm} \r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | summarize hint.shufflekey=Computer {TrendAggregator2} by Computer, CounterName\r\n    | top {TopN} by {TrendAggregator2:label} {TrendAggregatorOrder2});\r\nlet computerList=(cpuSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 2\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = ServiceMapComputer_CL\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend Computer = ComputerName_s, AzureCloudServiceNodeIdentity = iif(isnotempty(columnifexists('AzureCloudServiceName_s', '')), strcat(columnifexists('AzureCloudServiceInstanceId_s', ''), '|',                     columnifexists('AzureCloudServiceDeployment_g', '')), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(columnifexists('AzureVmScaleSetName_s', '')),              strcat(columnifexists('AzureVmScaleSetInstanceId_s', ''), '|',                     columnifexists('AzureVmScaleSetDeployment_g', '')), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', ComputerName_s,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId_g,                   'resourceGroup', AzureResourceGroup_s,                   'azureResourceId', columnifexists('AzureResourceId_s', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', columnifexists('AzureCloudServiceInstanceId_s', ''),                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName_s', ''),                   'cloudServiceDeploymentId', columnifexists('AzureCloudServiceDeployment_g', ''),                   'cloudServiceName', columnifexists('AzureCloudServiceName_s', ''),                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('AzureName_s', ''),                   'vmScaleSetDeploymentId', columnifexists('AzureVmScaleSetDeployment_g', ''),                   'vmScaleSetName', columnifexists('AzureVmScaleSetName_s', ''),                   'serviceFabricClusterName', columnifexists('AzureServiceFabricClusterName_s', ''),                   'vmScaleSetResourceId', columnifexists('AzureVmScaleSetResourceId_s', ''),                   'resourceGroupName', columnifexists('AzureResourceGroup_s', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId_g', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {TrendAggregator2}{Unit2} by {Snippet2}",
        "size": 0,
        "showAnnotations": true,
        "noDataMessage": "No computers are emitting data for this performance counter.",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "query - 19 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let metric = dynamic({Counter3});\r\nlet cpuSummary=totable(Perf\r\n    {ComputerFilter}\r\n    | where TimeGenerated {TimeRangeParm} \r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | summarize hint.shufflekey=Computer {TrendAggregator3} by Computer, CounterName\r\n    | top {TopN} by {TrendAggregator3:label} {TrendAggregatorOrder3});\r\nlet computerList=(cpuSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 3\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = ServiceMapComputer_CL\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend Computer = ComputerName_s, AzureCloudServiceNodeIdentity = iif(isnotempty(columnifexists('AzureCloudServiceName_s', '')), strcat(columnifexists('AzureCloudServiceInstanceId_s', ''), '|',                     columnifexists('AzureCloudServiceDeployment_g', '')), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(columnifexists('AzureVmScaleSetName_s', '')),              strcat(columnifexists('AzureVmScaleSetInstanceId_s', ''), '|',                     columnifexists('AzureVmScaleSetDeployment_g', '')), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', ComputerName_s,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId_g,                   'resourceGroup', AzureResourceGroup_s,                   'azureResourceId', columnifexists('AzureResourceId_s', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', columnifexists('AzureCloudServiceInstanceId_s', ''),                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName_s', ''),                   'cloudServiceDeploymentId', columnifexists('AzureCloudServiceDeployment_g', ''),                   'cloudServiceName', columnifexists('AzureCloudServiceName_s', ''),                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('AzureName_s', ''),                   'vmScaleSetDeploymentId', columnifexists('AzureVmScaleSetDeployment_g', ''),                   'vmScaleSetName', columnifexists('AzureVmScaleSetName_s', ''),                   'serviceFabricClusterName', columnifexists('AzureServiceFabricClusterName_s', ''),                   'vmScaleSetResourceId', columnifexists('AzureVmScaleSetResourceId_s', ''),                   'resourceGroupName', columnifexists('AzureResourceGroup_s', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId_g', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 3;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {TrendAggregator3}{Unit3} by {Snippet3}",
        "size": 0,
        "showAnnotations": true,
        "noDataMessage": "No computers are emitting data for this performance counter.",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "query - 19 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let metric = dynamic({Counter4});\r\nlet cpuSummary=totable(Perf\r\n    {ComputerFilter}\r\n    | where TimeGenerated {TimeRangeParm} \r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | summarize hint.shufflekey=Computer {TrendAggregator4} by Computer, CounterName\r\n    | top {TopN} by {TrendAggregator4:label} {TrendAggregatorOrder4});\r\nlet computerList=(cpuSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 4\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = ServiceMapComputer_CL\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend Computer = ComputerName_s, AzureCloudServiceNodeIdentity = iif(isnotempty(columnifexists('AzureCloudServiceName_s', '')), strcat(columnifexists('AzureCloudServiceInstanceId_s', ''), '|',                     columnifexists('AzureCloudServiceDeployment_g', '')), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(columnifexists('AzureVmScaleSetName_s', '')),              strcat(columnifexists('AzureVmScaleSetInstanceId_s', ''), '|',                     columnifexists('AzureVmScaleSetDeployment_g', '')), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', ComputerName_s,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId_g,                   'resourceGroup', AzureResourceGroup_s,                   'azureResourceId', columnifexists('AzureResourceId_s', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', columnifexists('AzureCloudServiceInstanceId_s', ''),                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName_s', ''),                   'cloudServiceDeploymentId', columnifexists('AzureCloudServiceDeployment_g', ''),                   'cloudServiceName', columnifexists('AzureCloudServiceName_s', ''),                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('AzureName_s', ''),                   'vmScaleSetDeploymentId', columnifexists('AzureVmScaleSetDeployment_g', ''),                   'vmScaleSetName', columnifexists('AzureVmScaleSetName_s', ''),                   'serviceFabricClusterName', columnifexists('AzureServiceFabricClusterName_s', ''),                   'vmScaleSetResourceId', columnifexists('AzureVmScaleSetResourceId_s', ''),                   'resourceGroupName', columnifexists('AzureResourceGroup_s', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId_g', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 4;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRangeParm}\r\n    | where ObjectName == metric.object and CounterName == metric.counter\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {TrendAggregator4}{Unit4} by {Snippet4}",
        "size": 0,
        "showAnnotations": true,
        "noDataMessage": "No computers are emitting data for this performance counter.",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Metric"
      },
      "customWidth": "25",
      "name": "query - 19 - Copy - Copy - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "f00b56b6-b4a7-4fc2-b1d0-b3760a19a762",
            "version": "KqlParameterItem/1.0",
            "name": "ClName",
            "label": "Select Cluster",
            "type": 2,
            "isRequired": true,
            "query": "info_CL\r\n| where TimeGenerated > now(-100day)\r\n| parse RawData with * \"CN=\" ClusterName \"Node=\" NodeName\r\n| distinct ClusterName",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 604800000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Csv"
      },
      "name": "parameters - 14"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "csvinfo_CL \r\n| parse RawData with * \"CN=\" ClusterName \"CVN=\" CSVName \"TS=\" totalSize:long * \"FS=\" FreeSpace:long * \"US=\" UsedSpace:long * \"UP=\" FreePerct\r\n| where ClusterName == \"{ClName}\" and TimeGenerated {TimeRangeParm}\r\n| extend  TotalVolSizeGB = toint(totalSize / 1024/1024/1024) \r\n| extend  FreeSpaceGB = toint(FreeSpace / 1024/1024/1024) \r\n| extend  UsedSpaceGB = toint(UsedSpace / 1024/1024/1024) \r\n| project TimeGenerated,ClusterName,CSVName,TotalVolSizeGB,FreeSpaceGB,UsedSpaceGB,FreePerct\r\n| order by TimeGenerated desc, CSVName asc\r\n",
        "size": 0,
        "title": "CSV Summary",
        "noDataMessage": "There is No data returned in time Range You Picked , Please Check Custom Logs Status",
        "noDataMessageStyle": 4,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TotalVolSizeGB",
              "formatter": 0,
              "numberFormat": {
                "unit": 39,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "FreeSpaceGB",
              "formatter": 0,
              "numberFormat": {
                "unit": 39,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "UsedSpaceGB",
              "formatter": 0,
              "numberFormat": {
                "unit": 14,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "FreePerct",
              "formatter": 8,
              "formatOptions": {
                "min": 30,
                "max": 99,
                "palette": "redGreen"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "UsedPerct",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "70",
                    "representation": "greenDark",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "70",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "80",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Csv"
      },
      "name": "query - 13"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let csvread = Perf\r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Cluster CSV File System\" and CounterName == \"IO Read Latency\" and  InstanceName != \"_Total\"\r\n| extend VMName = InstanceName\r\n| summarize IO_Read_Latency = toint(avg(CounterValue))  by InstanceName ,Computer;\r\n\r\nlet csvwrite = Perf\r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Cluster CSV File System\" and CounterName == \"IO Write Latency\" and  InstanceName != \"_Total\"\r\n| summarize IO_Write_Latency = toint(avg(CounterValue))  by InstanceName ,Computer;\r\n\r\ncsvread \r\n|join kind= inner csvwrite on InstanceName\r\n|project Computer , InstanceName ,IO_Write_Latency ,IO_Read_Latency  \r\n",
        "size": 0,
        "title": "Cluster CSV File System",
        "noDataMessage": "There is No data returned in time Range You Picked , Please Check Custom Logs Status",
        "noDataMessageStyle": 4,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "IO_Write_Latency",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "10",
                    "representation": "green",
                    "text": "{0} Healthy Less than 10ms"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "15",
                    "representation": "yellow",
                    "text": ">Caution >15ms"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "25",
                    "representation": "redBright",
                    "text": "{0} Critical >25ms"
                  },
                  {
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "gray",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "IO_Read_Latency",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<",
                    "thresholdValue": "10",
                    "representation": "green",
                    "text": "{0} Healthy Less than 10ms"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "15",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "25",
                    "representation": "redBright",
                    "text": "{0} Critical >25ms"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Computer",
              "label": "Host"
            },
            {
              "columnId": "InstanceName",
              "label": "CSV Disk"
            },
            {
              "columnId": "IO_Write_Latency",
              "label": "IO Write Latency"
            },
            {
              "columnId": "IO_Read_Latency",
              "label": "IO Read Latency"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Csv"
      },
      "name": "query - 13 - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "09546f5c-5596-409b-a24e-9a5f432940ae",
            "version": "KqlParameterItem/1.0",
            "name": "EventLevelParam",
            "label": "Event Level",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Event \r\n| where Computer has_any ({Clusternodes})and TimeGenerated {TimeRangeParm}\r\n| distinct EventLevelName",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "44e55e48-1daa-4fdc-b6e1-47ef2e464961",
            "version": "KqlParameterItem/1.0",
            "name": "EventLogParam",
            "label": "Event Log",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Event \r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where EventLevelName in ({EventLevelParam}) | distinct EventLog",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "b268052c-9ab6-4fae-ae5e-fc7bb38bcc6f",
            "version": "KqlParameterItem/1.0",
            "name": "SourceParam",
            "label": "Event Source",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Event \r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where EventLevelName in ({EventLevelParam}) and EventLog in ({EventLogParam})\r\n| distinct Source",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "95154338-baae-4c51-afed-c456c2d30bbe",
            "version": "KqlParameterItem/1.0",
            "name": "EventIDParam",
            "label": "Event ID",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Event \r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where EventLevelName in ({EventLevelParam}) and Source in ({SourceParam})\r\n| distinct EventID",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "name": "parameters - 12"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event \r\n//| where Computer in ({Clusternodes}) and EventLevelName in ({EventLevelParam}) and TimeGenerated {TimeRangeParm}\r\n|where Computer has_any ({Clusternodes})  and EventLevelName in ({EventLevelParam}) and EventLog in ({EventLogParam}) and Source in ({SourceParam}) and EventID in ({EventIDParam}) and TimeGenerated {TimeRangeParm}\r\n| project Computer, EventLevelName\r\n| evaluate pivot(EventLevelName)\r\n",
        "size": 1,
        "title": "Event Summary ",
        "exportFieldName": "Computer",
        "exportParameterName": "ComputersParam",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Error",
              "formatter": 8,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "Information",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Warning",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellow"
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "customWidth": "100",
      "name": "query - 12",
      "styleSettings": {
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event \r\n| where Computer has_any ({Clusternodes}) and EventLevelName == 'Error' and EventLog == \"System\" and Source == 'Microsoft-Windows-WER-SystemErrorReporting' and EventID == '1001'   and TimeGenerated {TimeRangeParm}\r\n| parse kind=relaxed EventData with * \"<Data Name=\\\"param1\\\">\" BugcheckCode \"</Data>\" \"<Data Name=\\\"param2\\\">\" MemoryDump \"</Data>\" *\r\n| project TimeGenerated ,Computer, BugcheckCode , MemoryDump\r\n//| evaluate pivot(EventLevelName)",
        "size": 4,
        "title": "Recent Crashed Event for \"{ComputersParam}\" With BugCheckCode",
        "noDataMessage": "There are No Recent OS Crashs ",
        "noDataMessageStyle": 3,
        "exportFieldName": "Computer",
        "exportParameterName": "ComputersParam",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 6
            },
            {
              "columnMatch": "BugcheckCode",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000001",
                    "text": "APC_INDEX_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000002",
                    "text": "DEVICE_QUEUE_NOT_BUSY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000003",
                    "text": "INVALID_AFFINITY_SET"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000004",
                    "text": "INVALID_DATA_ACCESS_TRAP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000005",
                    "text": "INVALID_PROCESS_ATTACH_ATTEMPT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000006",
                    "text": "INVALID_PROCESS_DETACH_ATTEMPT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000007",
                    "text": "INVALID_SOFTWARE_INTERRUPT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000008",
                    "text": "IRQL_NOT_DISPATCH_LEVEL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000009",
                    "text": "IRQL_NOT_GREATER_OR_EQUAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000a",
                    "text": "IRQL_NOT_LESS_OR_EQUAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000b",
                    "text": "NO_EXCEPTION_HANDLING_SUPPORT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000c",
                    "text": "MAXIMUM_WAIT_OBJECTS_EXCEEDED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000d",
                    "text": "MUTEX_LEVEL_NUMBER_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000e",
                    "text": "NO_USER_MODE_CONTEXT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000000f",
                    "text": "SPIN_LOCK_ALREADY_OWNED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000010",
                    "text": "SPIN_LOCK_NOT_OWNED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000011",
                    "text": "THREAD_NOT_MUTEX_OWNER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000012",
                    "text": "TRAP_CAUSE_UNKNOWN"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000013",
                    "text": "EMPTY_THREAD_REAPER_LIST"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000014",
                    "text": "CREATE_DELETE_LOCK_NOT_LOCKED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000015",
                    "text": "LAST_CHANCE_CALLED_FROM_KMODE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000016",
                    "text": "CID_HANDLE_CREATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000017",
                    "text": "CID_HANDLE_DELETION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000018",
                    "text": "REFERENCE_BY_POINTER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000019",
                    "text": "BAD_POOL_HEADER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001a",
                    "text": "MEMORY_MANAGEMENT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001b",
                    "text": "PFN_SHARE_COUNT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001c",
                    "text": "PFN_REFERENCE_COUNT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001d",
                    "text": "NO_SPIN_LOCK_AVAILABLE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001e",
                    "text": "KMODE_EXCEPTION_NOT_HANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000001f",
                    "text": "SHARED_RESOURCE_CONV_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000020",
                    "text": "KERNEL_APC_PENDING_DURING_EXIT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000021",
                    "text": "QUOTA_UNDERFLOW"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000022",
                    "text": "FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000023",
                    "text": "FAT_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000024",
                    "text": "NTFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000025",
                    "text": "NPFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000026",
                    "text": "CDFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000027",
                    "text": "RDR_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000028",
                    "text": "CORRUPT_ACCESS_TOKEN"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000029",
                    "text": "SECURITY_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002a",
                    "text": "INCONSISTENT_IRP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002b",
                    "text": "PANIC_STACK_SWITCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002c",
                    "text": "PORT_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002d",
                    "text": "SCSI_DISK_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002e",
                    "text": "DATA_BUS_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000002f",
                    "text": "INSTRUCTION_BUS_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000030",
                    "text": "SET_OF_INVALID_CONTEXT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000031",
                    "text": "PHASE0_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000032",
                    "text": "PHASE1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000033",
                    "text": "UNEXPECTED_INITIALIZATION_CALL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000034",
                    "text": "CACHE_MANAGER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000035",
                    "text": "NO_MORE_IRP_STACK_LOCATIONS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000036",
                    "text": "DEVICE_REFERENCE_COUNT_NOT_ZERO"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000037",
                    "text": "FLOPPY_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000038",
                    "text": "SERIAL_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000039",
                    "text": "SYSTEM_EXIT_OWNED_MUTEX"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003a",
                    "text": "SYSTEM_UNWIND_PREVIOUS_USER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003b",
                    "text": "SYSTEM_SERVICE_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003c",
                    "text": "INTERRUPT_UNWIND_ATTEMPTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003d",
                    "text": "INTERRUPT_EXCEPTION_NOT_HANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003e",
                    "text": "MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000003f",
                    "text": "NO_MORE_SYSTEM_PTES"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000040",
                    "text": "TARGET_MDL_TOO_SMALL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000041",
                    "text": "MUST_SUCCEED_POOL_EMPTY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000042",
                    "text": "ATDISK_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000043",
                    "text": "NO_SUCH_PARTITION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000044",
                    "text": "MULTIPLE_IRP_COMPLETE_REQUESTS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000045",
                    "text": "INSUFFICIENT_SYSTEM_MAP_REGS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000046",
                    "text": "DEREF_UNKNOWN_LOGON_SESSION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000047",
                    "text": "REF_UNKNOWN_LOGON_SESSION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000048",
                    "text": "CANCEL_STATE_IN_COMPLETED_IRP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000049",
                    "text": "PAGE_FAULT_WITH_INTERRUPTS_OFF"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004a",
                    "text": "IRQL_GT_ZERO_AT_SYSTEM_SERVICE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004b",
                    "text": "STREAMS_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004c",
                    "text": "FATAL_UNHANDLED_HARD_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004d",
                    "text": "NO_PAGES_AVAILABLE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004e",
                    "text": "PFN_LIST_CORRUPT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000004f",
                    "text": "NDIS_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000050",
                    "text": "PAGE_FAULT_IN_NONPAGED_AREA"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000051",
                    "text": "REGISTRY_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000052",
                    "text": "MAILSLOT_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000053",
                    "text": "NO_BOOT_DEVICE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000054",
                    "text": "LM_SERVER_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000055",
                    "text": "DATA_COHERENCY_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000056",
                    "text": "INSTRUCTION_COHERENCY_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000057",
                    "text": "XNS_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000058",
                    "text": "FTDISK_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000059",
                    "text": "PINBALL_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005a",
                    "text": "CRITICAL_SERVICE_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005b",
                    "text": "SET_ENV_VAR_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005c",
                    "text": "HAL_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005d",
                    "text": "UNSUPPORTED_PROCESSOR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005e",
                    "text": "OBJECT_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000005f",
                    "text": "SECURITY_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000060",
                    "text": "PROCESS_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000061",
                    "text": "HAL1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000062",
                    "text": "OBJECT1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000063",
                    "text": "SECURITY1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000064",
                    "text": "SYMBOLIC_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000065",
                    "text": "MEMORY1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000066",
                    "text": "CACHE_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000067",
                    "text": "CONFIG_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000068",
                    "text": "FILE_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000069",
                    "text": "IO1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006a",
                    "text": "LPC_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006b",
                    "text": "PROCESS1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006c",
                    "text": "REFMON_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006d",
                    "text": "SESSION1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006e",
                    "text": "SESSION2_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000006f",
                    "text": "SESSION3_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000070",
                    "text": "SESSION4_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000071",
                    "text": "SESSION5_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000072",
                    "text": "ASSIGN_DRIVE_LETTERS_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000073",
                    "text": "CONFIG_LIST_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000074",
                    "text": "BAD_SYSTEM_CONFIG_INFO"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000075",
                    "text": "CANNOT_WRITE_CONFIGURATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000076",
                    "text": "PROCESS_HAS_LOCKED_PAGES"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000077",
                    "text": "KERNEL_STACK_INPAGE_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000078",
                    "text": "PHASE0_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000079",
                    "text": "MISMATCHED_HAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007a",
                    "text": "KERNEL_DATA_INPAGE_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007b",
                    "text": "INACCESSIBLE_BOOT_DEVICE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007c",
                    "text": "BUGCODE_NDIS_DRIVER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007d",
                    "text": "INSTALL_MORE_MEMORY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007e",
                    "text": "SYSTEM_THREAD_EXCEPTION_NOT_HANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000007f",
                    "text": "UNEXPECTED_KERNEL_MODE_TRAP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000080",
                    "text": "NMI_HARDWARE_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000081",
                    "text": "SPIN_LOCK_INIT_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000082",
                    "text": "DFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000085",
                    "text": "SETUP_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000008b",
                    "text": "MBR_CHECKSUM_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000008e",
                    "text": "KERNEL_MODE_EXCEPTION_NOT_HANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000008f",
                    "text": "PP0_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000090",
                    "text": "PP1_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000092",
                    "text": "UP_DRIVER_ON_MP_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000093",
                    "text": "INVALID_KERNEL_HANDLE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000094",
                    "text": "KERNEL_STACK_LOCKED_AT_EXIT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000096",
                    "text": "INVALID_WORK_QUEUE_ITEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000097",
                    "text": "BOUND_IMAGE_UNSUPPORTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000098",
                    "text": "END_OF_NT_EVALUATION_PERIOD"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000099",
                    "text": "INVALID_REGION_OR_SEGMENT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000009a",
                    "text": "SYSTEM_LICENSE_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000009b",
                    "text": "UDFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000009c",
                    "text": "MACHINE_CHECK_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000009e",
                    "text": "USER_MODE_HEALTH_MONITOR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000009f",
                    "text": "DRIVER_POWER_STATE_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a0",
                    "text": "INTERNAL_POWER_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a1",
                    "text": "PCI_BUS_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a2",
                    "text": "MEMORY_IMAGE_CORRUPT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a3",
                    "text": "ACPI_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a4",
                    "text": "CNSS_FILE_SYSTEM_FILTER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a5",
                    "text": "ACPI_BIOS_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000a7",
                    "text": "BAD_EXHANDLE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ab",
                    "text": "SESSION_HAS_VALID_POOL_ON_EXIT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ac",
                    "text": "HAL_MEMORY_ALLOCATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ad",
                    "text": "VIDEO_DRIVER_DEBUG_REPORT_REQUEST"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000b1",
                    "text": "BGI_DETECTED_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000b4",
                    "text": "VIDEO_DRIVER_INIT_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000b8",
                    "text": "ATTEMPTED_SWITCH_FROM_DPC"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000b9",
                    "text": "CHIPSET_DETECTED_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ba",
                    "text": "SESSION_HAS_VALID_VIEWS_ON_EXIT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000bb",
                    "text": "NETWORK_BOOT_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000bc",
                    "text": "NETWORK_BOOT_DUPLICATE_ADDRESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000bd",
                    "text": "INVALID_HIBERNATED_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000be",
                    "text": "ATTEMPTED_WRITE_TO_READONLY_MEMORY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000bf",
                    "text": "MUTEX_ALREADY_OWNED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c1",
                    "text": "SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c2",
                    "text": "BAD_POOL_CALLER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c4",
                    "text": "DRIVER_VERIFIER_DETECTED_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c5",
                    "text": "DRIVER_CORRUPTED_EXPOOL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c6",
                    "text": "DRIVER_CAUGHT_MODIFYING_FREED_POOL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c7",
                    "text": "TIMER_OR_DPC_INVALID"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c8",
                    "text": "IRQL_UNEXPECTED_VALUE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000c9",
                    "text": "DRIVER_VERIFIER_IOMANAGER_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ca",
                    "text": "PNP_DETECTED_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000cb",
                    "text": "DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000cc",
                    "text": "PAGE_FAULT_IN_FREED_SPECIAL_POOL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000cd",
                    "text": "PAGE_FAULT_BEYOND_END_OF_ALLOCATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ce",
                    "text": "DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000cf",
                    "text": "TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d0",
                    "text": "DRIVER_CORRUPTED_MMPOOL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d1",
                    "text": "DRIVER_IRQL_NOT_LESS_OR_EQUAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d2",
                    "text": "BUGCODE_ID_DRIVER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d3",
                    "text": "DRIVER_PORTION_MUST_BE_NONPAGED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d4",
                    "text": "SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d5",
                    "text": "DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d6",
                    "text": "DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d7",
                    "text": "DRIVER_UNMAPPING_INVALID_VIEW"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d8",
                    "text": "DRIVER_USED_EXCESSIVE_PTES"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000d9",
                    "text": "LOCKED_PAGES_TRACKER_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000da",
                    "text": "SYSTEM_PTE_MISUSE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000db",
                    "text": "DRIVER_CORRUPTED_SYSPTES"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000dc",
                    "text": "DRIVER_INVALID_STACK_ACCESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000de",
                    "text": "POOL_CORRUPTION_IN_FILE_AREA"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000df",
                    "text": "IMPERSONATING_WORKER_THREAD"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e0",
                    "text": "ACPI_BIOS_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e1",
                    "text": "WORKER_THREAD_RETURNED_AT_BAD_IRQL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e2",
                    "text": "MANUALLY_INITIATED_CRASH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e3",
                    "text": "RESOURCE_NOT_OWNED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e4",
                    "text": "WORKER_INVALID"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e6",
                    "text": "DRIVER_VERIFIER_DMA_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e7",
                    "text": "INVALID_FLOATING_POINT_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e8",
                    "text": "INVALID_CANCEL_OF_FILE_OPEN"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000e9",
                    "text": "ACTIVE_EX_WORKER_THREAD_TERMINATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ea",
                    "text": "THREAD_STUCK_IN_DEVICE_DRIVER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000eb",
                    "text": "DIRTY_MAPPED_PAGES_CONGESTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ec",
                    "text": "SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ed",
                    "text": "UNMOUNTABLE_BOOT_VOLUME"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ef",
                    "text": "CRITICAL_PROCESS_DIED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f0",
                    "text": "STORAGE_MINIPORT_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f1",
                    "text": "SCSI_VERIFIER_DETECTED_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f2",
                    "text": "HARDWARE_INTERRUPT_STORM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f3",
                    "text": "DISORDERLY_SHUTDOWN"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f4",
                    "text": "CRITICAL_OBJECT_TERMINATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f5",
                    "text": "FLTMGR_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f6",
                    "text": "PCI_VERIFIER_DETECTED_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f7",
                    "text": "DRIVER_OVERRAN_STACK_BUFFER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f8",
                    "text": "RAMDISK_BOOT_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000f9",
                    "text": "DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000fa",
                    "text": "HTTP_DRIVER_CORRUPTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000fc",
                    "text": "ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000fd",
                    "text": "DIRTY_NOWRITE_PAGES_CONGESTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000fe",
                    "text": "BUGCODE_USB_DRIVER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000000ff",
                    "text": "RESERVE_QUEUE_OVERFLOW"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000100",
                    "text": "LOADER_BLOCK_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000101",
                    "text": "CLOCK_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000102",
                    "text": "DPC_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000103",
                    "text": "MUP_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000104",
                    "text": "AGP_INVALID_ACCESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000105",
                    "text": "AGP_GART_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000106",
                    "text": "AGP_ILLEGALLY_REPROGRAMMED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000108",
                    "text": "THIRD_PARTY_FILE_SYSTEM_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000109",
                    "text": "CRITICAL_STRUCTURE_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000010a",
                    "text": "APP_TAGGING_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000010c",
                    "text": "FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000010d",
                    "text": "WDF_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000010e",
                    "text": "VIDEO_MEMORY_MANAGEMENT_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000010f",
                    "text": "RESOURCE_MANAGER_EXCEPTION_NOT_HANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000111",
                    "text": "RECURSIVE_NMI"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000112",
                    "text": "MSRPC_STATE_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000113",
                    "text": "VIDEO_DXGKRNL_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000114",
                    "text": "VIDEO_SHADOW_DRIVER_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000115",
                    "text": "AGP_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000116",
                    "text": "VIDEO_TDR_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000117",
                    "text": "VIDEO_TDR_TIMEOUT_DETECTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000119",
                    "text": "VIDEO_SCHEDULER_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011a",
                    "text": "EM_INITIALIZATION_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011b",
                    "text": "DRIVER_RETURNED_HOLDING_CANCEL_LOCK"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011c",
                    "text": "ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011d",
                    "text": "EVENT_TRACING_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011e",
                    "text": "TOO_MANY_RECURSIVE_FAULTS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000011f",
                    "text": "INVALID_DRIVER_HANDLE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000120",
                    "text": "BITLOCKER_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000121",
                    "text": "DRIVER_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000122",
                    "text": "WHEA_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000123",
                    "text": "CRYPTO_SELF_TEST_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000124",
                    "text": "WHEA_UNCORRECTABLE_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000125",
                    "text": "NMR_INVALID_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000126",
                    "text": "NETIO_INVALID_POOL_CALLER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000127",
                    "text": "PAGE_NOT_ZERO"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000128",
                    "text": "WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000129",
                    "text": "WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012a",
                    "text": "MUI_NO_VALID_SYSTEM_LANGUAGE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012b",
                    "text": "FAULTY_HARDWARE_CORRUPTED_PAGE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012c",
                    "text": "EXFAT_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012d",
                    "text": "VOLSNAP_OVERLAPPED_TABLE_ACCESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012e",
                    "text": "INVALID_MDL_RANGE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000012f",
                    "text": "VHD_BOOT_INITIALIZATION_FAILED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000130",
                    "text": "DYNAMIC_ADD_PROCESSOR_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000131",
                    "text": "INVALID_EXTENDED_PROCESSOR_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000132",
                    "text": "RESOURCE_OWNER_POINTER_INVALID"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000133",
                    "text": "DPC_WATCHDOG_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000134",
                    "text": "DRIVE_EXTENDER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000135",
                    "text": "REGISTRY_FILTER_DRIVER_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000136",
                    "text": "VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000137",
                    "text": "WIN32K_HANDLE_MANAGER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000138",
                    "text": "GPIO_CONTROLLER_DRIVER_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000139",
                    "text": "KERNEL_SECURITY_CHECK_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000013a",
                    "text": "KERNEL_MODE_HEAP_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000013b",
                    "text": "PASSIVE_INTERRUPT_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000013c",
                    "text": "INVALID_IO_BOOST_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000013d",
                    "text": "CRITICAL_INITIALIZATION_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000140",
                    "text": "STORAGE_DEVICE_ABNORMALITY_DETECTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000141",
                    "text": "VIDEO_ENGINE_TIMEOUT_DETECTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000142",
                    "text": "VIDEO_TDR_APPLICATION_BLOCKED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000143",
                    "text": "PROCESSOR_DRIVER_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000144",
                    "text": "BUGCODE_USB3_DRIVER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000145",
                    "text": "SECURE_BOOT_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000147",
                    "text": "ABNORMAL_RESET_DETECTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000149",
                    "text": "REFS_FILE_SYSTEM"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014a",
                    "text": "KERNEL_WMI_INTERNAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014b",
                    "text": "SOC_SUBSYSTEM_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014c",
                    "text": "FATAL_ABNORMAL_RESET_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014d",
                    "text": "EXCEPTION_SCOPE_INVALID"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014e",
                    "text": "SOC_CRITICAL_DEVICE_REMOVED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000014f",
                    "text": "PDC_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000150",
                    "text": "TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000151",
                    "text": "UNSUPPORTED_INSTRUCTION_MODE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000152",
                    "text": "INVALID_PUSH_LOCK_FLAGS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000153",
                    "text": "KERNEL_LOCK_ENTRY_LEAKED_ON_THREAD_TERMINATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000154",
                    "text": "UNEXPECTED_STORE_EXCEPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000155",
                    "text": "OS_DATA_TAMPERING"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000156",
                    "text": "WINSOCK_DETECTED_HUNG_CLOSESOCKET_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000157",
                    "text": "KERNEL_THREAD_PRIORITY_FLOOR_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000158",
                    "text": "ILLEGAL_IOMMU_PAGE_FAULT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000159",
                    "text": "HAL_ILLEGAL_IOMMU_PAGE_FAULT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015a",
                    "text": "SDBUS_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015b",
                    "text": "WORKER_THREAD_RETURNED_WITH_SYSTEM_PAGE_PRIORITY_ACTIVE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015c",
                    "text": "PDC_WATCHDOG_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015d",
                    "text": "SOC_SUBSYSTEM_FAILURE_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015e",
                    "text": "BUGCODE_NDIS_DRIVER_LIVE_DUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000015f",
                    "text": "CONNECTED_STANDBY_WATCHDOG_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000160",
                    "text": "WIN32K_ATOMIC_CHECK_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000161",
                    "text": "LIVE_SYSTEM_DUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000162",
                    "text": "KERNEL_AUTO_BOOST_INVALID_LOCK_RELEASE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000163",
                    "text": "WORKER_THREAD_TEST_CONDITION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000164",
                    "text": "WIN32K_CRITICAL_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000165",
                    "text": "CLUSTER_CSV_STATUS_IO_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000166",
                    "text": "CLUSTER_RESOURCE_CALL_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000167",
                    "text": "CLUSTER_CSV_SNAPSHOT_DEVICE_INFO_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000168",
                    "text": "CLUSTER_CSV_STATE_TRANSITION_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000169",
                    "text": "CLUSTER_CSV_VOLUME_ARRIVAL_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016a",
                    "text": "CLUSTER_CSV_VOLUME_REMOVAL_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016b",
                    "text": "CLUSTER_CSV_CLUSTER_WATCHDOG_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016c",
                    "text": "INVALID_RUNDOWN_PROTECTION_FLAGS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016d",
                    "text": "INVALID_SLOT_ALLOCATOR_FLAGS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016e",
                    "text": "ERESOURCE_INVALID_RELEASE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000016f",
                    "text": "CLUSTER_CSV_STATE_TRANSITION_INTERVAL_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000170",
                    "text": "CRYPTO_LIBRARY_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000171",
                    "text": "CLUSTER_CSV_CLUSSVC_DISCONNECT_WATCHDOG"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000173",
                    "text": "COREMSGCALL_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000174",
                    "text": "COREMSG_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000175",
                    "text": "PREVIOUS_FATAL_ABNORMAL_RESET_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000178",
                    "text": "ELAM_DRIVER_DETECTED_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000179",
                    "text": "CLUSTER_CLUSPORT_STATUS_IO_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000017b",
                    "text": "PROFILER_CONFIGURATION_ILLEGAL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000017c",
                    "text": "PDC_LOCK_WATCHDOG_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000017d",
                    "text": "PDC_UNEXPECTED_REVOCATION_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000017e",
                    "text": "MICROCODE_REVISION_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000187",
                    "text": "VIDEO_DWMINIT_TIMEOUT_FALLBACK_BDD"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000188",
                    "text": "CLUSTER_CSVFS_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000189",
                    "text": "BAD_OBJECT_HEADER"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000018b",
                    "text": "SECURE_KERNEL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000018c",
                    "text": "HYPERGUARD_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000018d",
                    "text": "SECURE_FAULT_UNHANDLED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000018e",
                    "text": "KERNEL_PARTITION_REFERENCE_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000190",
                    "text": "WIN32K_CRITICAL_FAILURE_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000191",
                    "text": "PF_DETECTED_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000192",
                    "text": "KERNEL_AUTO_BOOST_LOCK_ACQUISITION_WITH_RAISED_IRQL"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000193",
                    "text": "VIDEO_DXGKRNL_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000195",
                    "text": "SMB_SERVER_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000196",
                    "text": "LOADER_ROLLBACK_DETECTED"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000197",
                    "text": "WIN32K_SECURITY_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000198",
                    "text": "UFX_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000199",
                    "text": "KERNEL_STORAGE_SLOT_IN_USE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000019a",
                    "text": "WORKER_THREAD_RETURNED_WHILE_ATTACHED_TO_SILO"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000019b",
                    "text": "TTM_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000019c",
                    "text": "WIN32K_POWER_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x0000019d",
                    "text": "CLUSTER_SVHDX_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a0",
                    "text": "TTM_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a1",
                    "text": "WIN32K_CALLOUT_WATCHDOG_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a2",
                    "text": "WIN32K_CALLOUT_WATCHDOG_BUGCHECK"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a3",
                    "text": "CALL_HAS_NOT_RETURNED_WATCHDOG_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a4",
                    "text": "DRIPS_SW_HW_DIVERGENCE_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a5",
                    "text": "USB_DRIPS_BLOCKER_SURPRISE_REMOVAL_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a6",
                    "text": "BLUETOOTH_ERROR_RECOVERY_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a7",
                    "text": "SMB_REDIRECTOR_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001a8",
                    "text": "VIDEO_DXGKRNL_BLACK_SCREEN_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001b0",
                    "text": "VIDEO_MINIPORT_FAILED_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001b8",
                    "text": "VIDEO_MINIPORT_BLACK_SCREEN_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c4",
                    "text": "DRIVER_VERIFIER_DETECTED_VIOLATION_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c5",
                    "text": "IO_THREADPOOL_DEADLOCK_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c6",
                    "text": "FAST_ERESOURCE_PRECONDITION_VIOLATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c7",
                    "text": "STORE_DATA_STRUCTURE_CORRUPTION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c8",
                    "text": "MANUALLY_INITIATED_POWER_BUTTON_HOLD"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001c9",
                    "text": "USER_MODE_HEALTH_MONITOR_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001ca",
                    "text": "SYNTHETIC_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001cb",
                    "text": "INVALID_SILO_DETACH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001cc",
                    "text": "EXRESOURCE_TIMEOUT_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001cd",
                    "text": "INVALID_CALLBACK_STACK_ADDRESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001ce",
                    "text": "INVALID_KERNEL_STACK_ADDRESS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001cf",
                    "text": "HARDWARE_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d0",
                    "text": "CPI_FIRMWARE_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d1",
                    "text": "TELEMETRY_ASSERTS_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d2",
                    "text": "WORKER_THREAD_INVALID_STATE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d3",
                    "text": "WFP_INVALID_OPERATION"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d4",
                    "text": "UCMUCSI_LIVEDUMP"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d5",
                    "text": "DRIVER_PNP_WATCHDOG"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d6",
                    "text": "WORKER_THREAD_RETURNED_WITH_NON_DEFAULT_WORKLOAD_CLASS"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d7",
                    "text": "EFS_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d8",
                    "text": "UCMUCSI_FAILURE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001d9",
                    "text": "HAL_IOMMU_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001da",
                    "text": "HAL_BLOCKED_PROCESSOR_INTERNAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001db",
                    "text": "IPI_WATCHDOG_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x000001dc",
                    "text": "DMA_COMMON_BUFFER_VECTOR_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000356",
                    "text": "XBOX_ERACTRL_CS_TIMEOUT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000bfe",
                    "text": "BC_BLUETOOTH_VERIFIER_FAULT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00000bff",
                    "text": "BC_BTHMINI_VERIFIER_FAULT"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x00020001",
                    "text": "HYPERVISOR_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x1000007e",
                    "text": "SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x1000007f",
                    "text": "UNEXPECTED_KERNEL_MODE_TRAP_M"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x1000008e",
                    "text": "KERNEL_MODE_EXCEPTION_NOT_HANDLED_M"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x100000ea",
                    "text": "THREAD_STUCK_IN_DEVICE_DRIVER_M"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0x4000008a",
                    "text": "THREAD_TERMINATE_HELD_MUTEX"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0xc0000218",
                    "text": "STATUS_CANNOT_LOAD_REGISTRY_FILE"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0xc000021a",
                    "text": "WINLOGON_FATAL_ERROR"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0xc0000221",
                    "text": "STATUS_IMAGE_CHECKSUM_MISMATCH"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "0xdeaddead",
                    "text": "MANUALLY_INITIATED_CRASH1"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": null,
                    "text": "{0} "
                  }
                ]
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "customWidth": "50",
      "name": "query - 15",
      "styleSettings": {
        "margin": "100",
        "padding": "100",
        "maxWidth": "50",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event\r\n| where Computer has_any ({Clusternodes}) and Source == 'Service Control Manager' and EventID == '7031' and TimeGenerated {TimeRangeParm}\r\n| parse kind=relaxed EventData with * \"<Data Name=\\\"param1\\\">\" ServiceName \"</Data>\" \"<Data Name=\\\"param2\\\">\"  TerminatedCount \"</Data>\" \"<Data Name=\\\"param3\\\">\" MS \"</Data>\" \"<Data Name=\\\"param4\\\">\" param4 \"</Data>\"\"<Data Name=\\\"param5\\\">\" CorrectiveAction \"</Data>\" *\r\n| sort by ServiceName desc\r\n| project Computer,ServiceName,TerminatedCount,CorrectiveAction",
        "size": 4,
        "title": "Results For \"{ComputersParam}\"",
        "noDataMessage": "Event ID \"7031\" Was Not Found ",
        "noDataMessageStyle": 3,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TerminatedCount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "1",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "2",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3",
                    "representation": "redBright",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Computer",
              "label": "Computer Name"
            },
            {
              "columnId": "ServiceName",
              "label": "Service Name"
            },
            {
              "columnId": "TerminatedCount",
              "label": "SVC Crash Count"
            },
            {
              "columnId": "CorrectiveAction",
              "label": "Action Taken "
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "customWidth": "50",
      "name": "query - 16",
      "styleSettings": {
        "maxWidth": "50",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event\r\n| where Source in ({SourceParam}) \r\n| where EventLog in ({EventLogParam}) \r\n| where EventLevelName in ({EventLevelParam}) \r\n| where Computer has_any ({Clusternodes}) \r\n| summarize EventCount=count(EventLevel) by Source, EventLog, Computer\r\n| extend jkey = 1\r\n| join (Event \r\n        | where Source in ({SourceParam}) \r\n        | where EventLog in ({EventLogParam}) \r\n        | where EventLevelName in ({EventLevelParam}) \r\n        | where Computer has_any ({Clusternodes}) \r\n        | make-series EventTimeLine = count(EventLevel) default = 0 on TimeGenerated from {TimeRangeParm:start} to {TimeRangeParm:end} step {TimeRangeParm:grain} by Source, EventLog) on Source\r\n| project-away jkey, Source1, EventLog1, TimeGenerated",
        "size": 0,
        "showAnalytics": true,
        "title": "Event List",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "EventCount",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellowGreen"
              }
            },
            {
              "columnMatch": "EventTimeLine",
              "formatter": 9,
              "formatOptions": {
                "palette": "blue"
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "name": "query - 30"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event\r\n| where Source in ({SourceParam}) \r\n| where EventLog in ({EventLogParam}) \r\n| where EventLevelName in ({EventLevelParam})\r\n| where Computer has_any ({Clusternodes}) \r\n| extend Pack=pack_all()\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago') \r\n| project [\"Time\"]=strcat('🕒', TimeAgo), EventLog, Computer, RenderedDescription, UserName, [\"Details\"]=Pack\r\n",
        "size": 0,
        "showAnalytics": true,
        "title": "Event List",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "🔍 Click To View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Event"
      },
      "name": "query - 30 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let WindowsServers = Heartbeat\r\n| where OSType == \"Windows\"  and Computer has_any ({Clusternodes}) \r\n| distinct Computer;\r\nlet CPU = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Processor\" and CounterName == '% Processor Time' and InstanceName == \"_Total\"\r\n| summarize avgCPU = toint(avg(CounterValue)), maxCPU = toint(max(CounterValue)) by Computer;\r\nlet Memory = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where CounterName == \"% Committed Bytes In Use\" \r\n| summarize avgMemory = toint(avg(CounterValue)) by Computer;\r\nlet AvailableMBytes = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Memory\" and  CounterName == \"Available MBytes\"\r\n| summarize MemAvailableMBytes = (max(CounterValue))  by Computer;\r\nlet DiscoC = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"LogicalDisk\" and CounterName == \"% Free Space\" and InstanceName =~ \"C:\"\r\n| summarize avgDriveC = toint(max(CounterValue))  by Computer;\r\nlet HypervisorLP = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Hyper-V Hypervisor Logical Processor\" and CounterName == \"% Total Run Time\" and InstanceName == \"_Total\" \r\n| summarize AvgHypervisorLP = toint(max(CounterValue)) by Computer;\r\nlet HypervisorRT = Perf\r\n| where Computer in (WindowsServers) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Hyper-V Hypervisor Root Virtual Processor\" and CounterName == \"% Total Run Time\" and InstanceName == \"_Total\" \r\n| summarize AvgHypervisorRT = toint(avg(CounterValue)) by Computer;\r\n\r\n\r\nCPU \r\n| join kind= inner Memory on Computer \r\n| join kind= inner DiscoC on Computer \r\n| join kind= inner HypervisorLP on Computer\r\n| join kind= inner HypervisorRT on Computer \r\n| join kind= inner AvailableMBytes on Computer \r\n\r\n| project Computer, avgCPU ,maxCPU , avgMemory ,MemAvailableMBytes, avgDriveC ,AvgHypervisorLP  ,AvgHypervisorRT\r\n| order by avgCPU desc\r\n",
        "size": 0,
        "title": "Hyper-V Host Summary Overview ",
        "exportedParameters": [
          {
            "fieldName": "ComputerName",
            "parameterName": "ComputerName",
            "parameterType": 5
          }
        ],
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "avgCPU",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "coldHot"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "maxCPU",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "coldHot"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "avgMemory",
              "formatter": 3,
              "formatOptions": {
                "min": 0,
                "max": 99,
                "palette": "coldHot"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MemAvailableMBytes",
              "formatter": 0,
              "numberFormat": {
                "unit": 4,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "avgDriveC",
              "formatter": 4,
              "formatOptions": {
                "palette": "hotCold"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "AvgHypervisorLP",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "85",
                    "representation": "red",
                    "text": "{0}{1} {Critical}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "75",
                    "representation": "orange",
                    "text": "{0}{1} Caution (Total)"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "75",
                    "representation": "green",
                    "text": "{0}{1} Healthy (Total)"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}{h}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              },
              "tooltipFormat": {
                "tooltip": "The percentage of time spent by the processor in guest and hypervisor code"
              }
            },
            {
              "columnMatch": "AvgHypervisorRT",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "5",
                    "representation": "green",
                    "text": "{0}{1} Healthy (Total)"
                  },
                  {
                    "operator": "<=",
                    "thresholdValue": "10",
                    "representation": "orange",
                    "text": "{0}{1} Caution (Total)"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "10",
                    "representation": "red",
                    "text": "{0}{1} Critical"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              },
              "tooltipFormat": {
                "tooltip": "The percentage of time spent by the processor in guest and hypervisor code"
              }
            },
            {
              "columnMatch": "ContextSwitch",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": ">=",
                    "thresholdValue": "20000",
                    "representation": "red",
                    "text": "{0}{1} Critical"
                  },
                  {
                    "operator": ">=",
                    "thresholdValue": "10000",
                    "representation": "orange",
                    "text": "{0}{1} Caution"
                  },
                  {
                    "operator": "<",
                    "thresholdValue": "10000",
                    "representation": "green",
                    "text": "{0}{1} Healthy"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "orange",
                    "text": "{0}{1}"
                  }
                ]
              },
              "tooltipFormat": {
                "tooltip": "The rate of virtual processor context switches on the processor"
              }
            }
          ],
          "filter": true,
          "sortBy": [
            {
              "itemKey": "Computer",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Computer"
            },
            {
              "columnId": "avgCPU",
              "label": "CPU Avg."
            },
            {
              "columnId": "maxCPU",
              "label": "CPU Max."
            },
            {
              "columnId": "avgMemory",
              "label": "Committed Bytes In Use"
            },
            {
              "columnId": "MemAvailableMBytes",
              "label": "Available Memory"
            },
            {
              "columnId": "avgDriveC",
              "label": "[C] Drive Free space "
            },
            {
              "columnId": "AvgHypervisorLP",
              "label": "Hypervisor  Logical Processor Usage",
              "comment": "Hypervisor Logical Processor "
            },
            {
              "columnId": "AvgHypervisorRT",
              "label": "Hypervisor Root Processor Usage",
              "comment": "Hypervisor Root CPU "
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "Computer",
            "sortOrder": 2
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OSOverview"
      },
      "name": "query - 2",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let memp = Perf\r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| where ObjectName == \"Hyper-V Dynamic Memory VM\" and CounterName == \"Current Pressure\"\r\n| extend VMName = InstanceName\r\n| summarize Memory_Pressure = toint(avg(CounterValue))  by VMName ,Computer;\r\n\r\nlet CPU = Perf\r\n| where ObjectName contains \"Hyper-V Hypervisor Virtual Processor\" and CounterName == \"% Total Run Time\" and InstanceName != \"_Total\"\r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| extend VMName = extract(\"(.+?):.*\",1,InstanceName)\r\n|summarize Max_VP = argmax(CounterValue, *) by  VMName ,Computer;\r\n\r\nlet CPUCores = Perf\r\n| where ObjectName contains \"Hyper-V Hypervisor Virtual Processor\" and CounterName == \"% Total Run Time\" and InstanceName != \"_Total\"\r\n| where Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| extend VMName = extract(\"(.+?):.*\",1,InstanceName)\r\n| summarize Cores = dcount(InstanceName) by VMName ,Computer;\r\n\r\nCPU \r\n|join kind= inner memp on VMName\r\n|join kind= inner CPUCores on VMName\r\n|project  VMName,Memory_Pressure,Cores,Max_VP,Computer\r\n\r\n\r\n//old query without CPU \r\n//Perf\r\n//| where Computer in ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n//| where ObjectName == \"Hyper-V Dynamic Memory VM\" and CounterName == \"Current Pressure\"\r\n//| summarize VMMEMPressure = toint(avg(CounterValue))  by InstanceName ,Computer;\r\n",
        "size": 0,
        "title": "Virtual Machines Summary {Cluster}",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Memory_Pressure",
              "formatter": 4,
              "formatOptions": {
                "palette": "greenRed"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Max_VP",
              "formatter": 4,
              "formatOptions": {
                "palette": "greenRed",
                "aggregation": "Max"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "VMMEMPressure",
              "formatter": 4,
              "formatOptions": {
                "palette": "greenRed"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "VMName",
              "label": "Virtual Machine"
            },
            {
              "columnId": "Memory_Pressure",
              "label": "VM Memory Pressure"
            },
            {
              "columnId": "Max_VP",
              "label": "VM Max VP Instance "
            },
            {
              "columnId": "Computer",
              "label": "Hyper-V Host"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OSOverview"
      },
      "name": "query - 2 - Copy",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "//Check https://docs.microsoft.com/en-us/archive/blogs/askcore/windows-performance-monitor-disk-counters-explained \r\nlet _minValuePerc = 100; \r\nlet _minValue =  0;\r\nlet FreeMB = Perf\r\n| where CounterValue <= _minValue or _minValue == 0\r\n| where TimeGenerated > now(-10min) and CounterName == \"Free Megabytes\"  and Computer has_any ({Clusternodes})\r\n//| summarize FreeMB = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| summarize FreeMB = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| sort by TimeGenerated, Computer desc;\r\n//FreeMB\r\nlet FreeSpace = Perf\r\n| where CounterValue <= _minValuePerc\r\n| where TimeGenerated > now(-10min) and CounterName == \"% Free Space\" and InstanceName contains \":\"  and Computer has_any ({Clusternodes}) //and TimeGenerated {TimeRangeParm}\r\n| summarize FreeSpace = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| sort by TimeGenerated, Computer desc;\r\n//Add Avg. Disk sec/Read\r\nlet readsec = Perf\r\n| where TimeGenerated > now(-10min) and ObjectName == \"LogicalDisk\" and  CounterName == \"Avg. Disk sec/Read\" and InstanceName contains \":\" and Computer has_any ({Clusternodes}) and TimeGenerated {TimeRangeParm}\r\n| summarize readsec = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| sort by TimeGenerated, Computer desc;\r\n//Add Avg. Disk sec/Write \r\nlet Wrirtesec = Perf\r\n| where TimeGenerated > now(-10min) and ObjectName == \"LogicalDisk\" and  CounterName == \"Avg. Disk sec/Write\" and InstanceName contains \":\" and Computer has_any ({Clusternodes}) //and TimeGenerated {TimeRangeParm}\r\n| summarize Wrirtesec = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| sort by TimeGenerated, Computer desc;\r\n//Add Disk Transfers/sec \r\nlet Transferssec = Perf\r\n| where TimeGenerated > now(-10min) and ObjectName == \"LogicalDisk\" and  CounterName == \"Disk Transfers/sec\" and InstanceName contains \":\" and Computer has_any ({Clusternodes}) //and TimeGenerated {TimeRangeParm}\r\n| summarize Transferssec = (avg(CounterValue)) by bin(TimeGenerated, 1h), Computer, InstanceName\r\n| sort by TimeGenerated, Computer desc;\r\n\r\n//FreeSpace\r\nlet DiskTotalFreeMB = FreeMB | join FreeSpace on Computer, InstanceName | join readsec on Computer, InstanceName| join Wrirtesec on Computer, InstanceName | join Transferssec on Computer, InstanceName\r\n| project TimeGenerated, Computer, InstanceName, FreeMB, FreeSpace , readsec ,Wrirtesec ,Transferssec\r\n| extend TotalSizeGB = toint((FreeMB / FreeSpace * 100) / 1024)\r\n| extend AvgDiskRsec = (readsec * 1000)\r\n| extend AvgDiskWsec = (Wrirtesec * 1000);\r\n\r\n\r\n//DiskTotalFreeMB\r\nDiskTotalFreeMB |  sort by TimeGenerated, Computer, InstanceName\r\n| extend FreeGB = FreeMB / 1024\r\n| project Computer, InstanceName,  round(FreeGB), TotalSizeGB, round(FreeSpace) , toint(AvgDiskRsec), toint(AvgDiskWsec) ,toint(Transferssec)\r\n| distinct Computer, InstanceName, round(FreeGB), TotalSizeGB, round(FreeSpace) , toint(AvgDiskRsec), toint(AvgDiskWsec) ,toint(Transferssec)\r\n| order by round(FreeSpace) asc",
        "size": 2,
        "title": "Summarize disk usage and IOPS ",
        "noDataMessage": "There is no Data Returned in The Past Hour ",
        "noDataMessageStyle": 4,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "FreeGB",
              "formatter": 3,
              "formatOptions": {
                "palette": "redGreen"
              },
              "numberFormat": {
                "unit": 39,
                "options": {
                  "style": "decimal",
                  "useGrouping": false
                }
              }
            },
            {
              "columnMatch": "TotalSizeGB",
              "formatter": 0,
              "formatOptions": {},
              "numberFormat": {
                "unit": 39,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "FreeSpace",
              "formatter": 3,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "redGreen"
              },
              "numberFormat": {
                "unit": 5,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_bar_FreeGB_2",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Computer"
            },
            {
              "columnId": "InstanceName",
              "label": "Drive"
            },
            {
              "columnId": "FreeGB",
              "label": "Free GB"
            },
            {
              "columnId": "TotalSizeGB",
              "label": "Total GB"
            },
            {
              "columnId": "FreeSpace",
              "label": "Free %"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_bar_FreeGB_2",
            "sortOrder": 2
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Diskstatus"
      },
      "name": "query - 2",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Perf \r\n| where  Computer has_any ({Clusternodes}) \r\n| where CounterName == \"Disk Transfers/sec\" and TimeGenerated {TimeRangeParm}\r\n| summarize AggregatedValue = percentile(CounterValue, 95) by Computer\t\r\n",
        "size": 0,
        "title": "Total Disk IOPS (Transfers/Sec)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Computer",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "InstanceName",
              "formatter": 1,
              "formatOptions": {}
            },
            {
              "columnMatch": "CounterValue",
              "formatter": 8,
              "formatOptions": {
                "min": 10,
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 9,
              "formatOptions": {
                "palette": "blue"
              }
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Computer"
            ]
          }
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1,
            "formatOptions": {}
          },
          "subtitleContent": {
            "columnMatch": "AggregatedValue",
            "formatter": 12,
            "formatOptions": {
              "palette": "blue"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal"
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "Computer",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Diskstatus"
      },
      "name": "query - 5",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "9f8b0957-9ea1-472d-bde5-63d0a79ccbad",
            "version": "KqlParameterItem/1.0",
            "name": "Classification",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": " or Classification == ",
            "query": "Update\r\n|where TimeGenerated>ago(14h)\r\n|where  Computer has_any ({Clusternodes}) \r\n|distinct Classification ",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "b4208875-7f49-499f-adbf-4a2541006f3a",
            "version": "KqlParameterItem/1.0",
            "name": "Status",
            "type": 2,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"'Needed'\", \"label\":\"Needed\" },\r\n    { \"value\":\"'Installed'\", \"label\":\"Installed\" },\r\n    { \"value\":\"'Installed' , 'Needed'\", \"label\":\"All\", \"selected\":true }\r\n]"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "name": "parameters - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Update\r\n| where  Computer has_any ({Clusternodes}) \r\n| where TimeGenerated>ago(14h) and OSType!=\"Linux\" and (Optional==false or Classification has \"Critical\" or Classification has \"Security\") and SourceComputerId in ((Heartbeat\r\n| where  TimeGenerated>ago(12h) and OSType=~\"Windows\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, *) by SourceComputerId\r\n| distinct SourceComputerId))\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer, SourceComputerId, UpdateID\r\n| where UpdateState=~\"Needed\" and Approved!=false\r\n| summarize UpdatesNeeded=count(Classification) by Classification",
        "size": 0,
        "title": "Missing Update Summary in the Past 12 hours ",
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "UpdatesNeeded"
          ],
          "group": "Classification",
          "createOtherGroup": null,
          "seriesLabelSettings": [
            {
              "seriesName": "Definition Updates",
              "color": "blue"
            },
            {
              "seriesName": "Security Updates",
              "color": "red"
            },
            {
              "seriesName": "Updates",
              "color": "yellow"
            },
            {
              "seriesName": "Update Rollups",
              "color": "orange"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "customWidth": "40",
      "name": "query - 9",
      "styleSettings": {
        "maxWidth": "40",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Update\r\n| where  Computer has_any ({Clusternodes}) and  TimeGenerated>ago(14h)\r\n| where OSType!=\"Linux\" and Optional==false\r\n| where Classification == {Classification}\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer,UpdateID ,Classification \r\n//| where UpdateState == {Status} and Approved==True\r\n| where UpdateState in ({Status}) and Approved==True\r\n| summarize Updates_Count=count() by Computer ,Classification",
        "size": 0,
        "title": "Missing/Needed Approved Updates in the Past 12 hours ",
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Classification",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Security Updates",
                    "representation": "Important",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Definition Updates",
                    "representation": "Important",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Updates",
                    "representation": "Important",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Critical Updates\t",
                    "representation": "critical",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Update Rollups",
                    "representation": "Important",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Applications",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Important",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Updates_Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "1",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "<=",
                    "thresholdValue": "3",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "3",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "$gen_thresholds_Classification_1",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Computer",
              "label": "Computer Name"
            },
            {
              "columnId": "Updates_Count",
              "label": "Count"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_thresholds_Classification_1",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Updates_Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Updates_Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "customWidth": "55",
      "name": "query - 6",
      "styleSettings": {
        "maxWidth": "55",
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Update\r\n| where TimeGenerated>ago(14h) and OSType!=\"Linux\" and (Optional==false or Classification has \"Critical\" or Classification has \"Security\") and UpdateState in ({Status}) and SourceComputerId in ((Heartbeat \r\n| where TimeGenerated>ago(12h) and OSType=~\"Windows\" and  Computer has_any ({Clusternodes})  \r\n| summarize arg_max(TimeGenerated, *) by SourceComputerId\r\n| distinct SourceComputerId))\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer, SourceComputerId, UpdateID  \r\n//| where UpdateState=~\"Needed\" and Approved!=false and Classification == {Classification}\r\n| where UpdateState in ({Status}) and Approved!=false and Classification == {Classification}\r\n|sort by Computer \r\n|project  Title,Product, Classification,UpdateState, KBID ,MSRCSeverity,RevisionNumber , PublishedDate ",
        "size": 0,
        "title": "Update Details in the Past 12 hours ",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Title",
              "formatter": 1
            },
            {
              "columnMatch": "KBID",
              "formatter": 1
            },
            {
              "columnMatch": "MSRCSeverity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Important",
                    "representation": "orange",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Critical",
                    "representation": "red",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Moderate",
                    "representation": "yellow",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "blue",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "PublishedDate",
              "formatter": 6,
              "dateFormat": {
                "showUtcTime": null,
                "formatName": "shortDatePattern"
              }
            }
          ],
          "filter": true,
          "sortBy": [
            {
              "itemKey": "UpdateState",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "UpdateState",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "name": "query - 7",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ConfigurationData\r\n| where Computer has_any ({Clusternodes}) \r\n| where ConfigDataType == \"Software\" and CurrentVersion == \"Installed\" and SoftwareType == \"Update\"  and Publisher == \"Microsoft Corporation\"\r\n| project Computer , SoftwareName\r\n",
        "size": 0,
        "title": "Current Installed Updates ",
        "timeContext": {
          "durationMs": 604800000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Computer",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Computer"
            ]
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "name": "query - 29"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ConfigurationData\r\n| where  Computer has_any ({Clusternodes}) \r\n| where ConfigDataType == \"WindowsServices\" and (SvcDisplayName contains \"Hyper-V\" or SvcDisplayName contains \"cluster\" or SvcDisplayName contains \"Stack HCI\") and SvcStartupType == \"Auto\"\r\n| extend localTimestamp = TimeGenerated\r\n| extend Status = case(SvcState == \"Stopped\", \"0\",SvcState == \"Running\", \"1\",\"NA\")\r\n| summarize arg_max(localTimestamp, *) by Computer, SvcDisplayName\r\n| order by Status asc\r\n| project Computer ,SvcDisplayName ,Status, TimeGenerated",
        "size": 0,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "1",
                    "representation": "success",
                    "text": "Running"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "stopped",
                    "text": "Stopped"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "unknown",
                    "text": "Unknown"
                  }
                ]
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Computer",
              "label": "Computer Name"
            },
            {
              "columnId": "SvcDisplayName",
              "label": "Service Name"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "SVC"
      },
      "name": "query - 10"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Alert \r\n| summarize Count = count(AlertSeverity) by AlertName ,AlertSeverity ,AlertDescription\r\n| project  AlertName , Count , AlertSeverity ,AlertDescription",
        "size": 0,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Count",
              "formatter": 8,
              "formatOptions": {
                "palette": "redBright"
              }
            },
            {
              "columnMatch": "AlertSeverity",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "1",
                    "representation": "redBright",
                    "text": "Error"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "red",
                    "text": " Critical"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "2",
                    "representation": "yellow",
                    "text": "Warning"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "3",
                    "representation": "blue",
                    "text": "Informational"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "4",
                    "representation": "blueDarkDark",
                    "text": "Verbose"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "green",
                    "text": "{0}"
                  }
                ]
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "AlertName",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "AlertName",
              "label": "Alert Name"
            },
            {
              "columnId": "AlertSeverity",
              "label": "Alert Severity"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "AlertName",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "healthservice"
      },
      "name": "query - 32"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Heartbeat  \r\n| where TimeGenerated > ago(1h)\r\n| summarize NoHeartbeatPeriod = now() - max(TimeGenerated) by Computer  \r\n| top 20 by NoHeartbeatPeriod desc",
        "size": 0,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "NoHeartbeatPeriod",
              "formatter": 0,
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "healthservice"
      },
      "name": "query - 33"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Event \r\n| where TimeGenerated {TimeRangeParm}\r\n| where EventID == 8465 | where RenderedDescription contains \"ChangeType: Active\"\r\n//| parse kind=relaxed EventData with * \"<Data Name=\\\"param1\\\">\" BugcheckCode \"</Data>\" \"<Data Name=\\\"param2\\\">\" MemoryDump \"</Data>\" *\r\n| project TimeGenerated , Computer , RenderedDescription",
        "size": 0,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "sortBy": [
            {
              "itemKey": "RenderedDescription",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "RenderedDescription",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo"
      },
      "name": "query - 34"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Perf \r\n| where TimeGenerated {TimeRangeParm}\r\n| where CounterName == \"% Processor Time\" and InstanceName == \"_Total\" | summarize AggregatedValue = avg(CounterValue) by Computer, bin(TimeGenerated, 10m) | where AggregatedValue > 85",
        "size": 0,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "healthservice"
      },
      "name": "query - 35"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/97e85eba-485a-4100-aca9-eb480f45dea0/resourceGroups/hci-rg/providers/Microsoft.OperationalInsights/workspaces/hci-la"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
